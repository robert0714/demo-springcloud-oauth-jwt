/*
 * This file is generated by jOOQ.
 */
package com.example.demo.model;


import lombok.Data;
import lombok.experimental.Accessors;

import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * 核發Token列表
 */
@Data
@Accessors(chain = true)
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.5"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "oauth_access_token", indexes = {
        @Index(name = "PRIMARY", unique = true, columnList = "authentication_id ASC")
})
public class OauthAccessToken implements Serializable {

    private static final long serialVersionUID = 567737545;
    @Column(name = "token_id", length = 256)
    @Size(max = 256)
    private String tokenId;
    @Lob
    @Column(name = "token", length = 65535)
    @Size(max = 65535)
    private byte[] token;
    @Id
    @Column(name = "authentication_id", unique = true, nullable = false, length = 256)
    @NotNull
    @Size(max = 256)
    private String authenticationId;
    @Column(name = "user_name", length = 256)
    @Size(max = 256)
    private String userName;
    @Column(name = "client_id", length = 256)
    @Size(max = 256)
    private String clientId;
    @Lob
    @Column(name = "authentication", length = 65535)
    @Size(max = 65535)
    private byte[] authentication;
    @Column(name = "refresh_token", length = 256)
    @Size(max = 256)
    private String refreshToken;
}
